{"version":3,"sources":["webpack:///webpack/bootstrap f7f24ccad96cf71cfcbc","webpack:///external \"angular\"","webpack:///./lib/index.js","webpack:///./lib/TreeGenerator.service.js","webpack:///./lib/TreeView.service.js","webpack:///./lib/TreeViewController.js","webpack:///./lib/treeView.directive.js","webpack:///./index.js"],"names":["Object","defineProperty","exports","value","_angular","require","_angular2","_interopRequireDefault","_treeView","_treeView2","_TreeView","_TreeView2","_TreeGenerator","_TreeGenerator2","_TreeViewController","_TreeViewController2","obj","__esModule","default","_module","module","directive","factory","controller","name","TreeGenerator","$inject","$compile","service","generate","nodes","params","html","generateHtml","maxDepth","scope","shouldGoDeeper","undefined","isNaN","isArray","length","listItems","map","node","index","getListItem","isCheckboxEnabled","join","getToggleLinkHtml","nodeExpr","isCollapsed","isNotCollapsed","getLabelWithCheckbox","isSelected","getLabel","id","label","collapsed","children","TreeView","hasChildren","walk","tree","callback","Array","forEach","filter","inclusiveChildren","filterTreeInclusive","filterTree","flattenAsObject","object","mapTree","count","reduce","acc","childTreeCount","mappedNode","result","shouldIncludeIt","push","filteredChildren","concat","TreeViewController","$scope","$timeout","$element","vm","Number","flatNodes","checkboxes","toggleNode","$event","clickedElement","currentTarget","nodeElement","element","closest","containsChildTree","find","childTree","generateTree","append","handleChange","isFunction","onSelectionChange","init","render","treeView","restrict","replace","template","controllerAs","bindToController"],"mappings":"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","file":"ng-tree-view.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f7f24ccad96cf71cfcbc","module.exports = angular;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"angular\"\n// module id = 0\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _angular = require('angular');\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nvar _treeView = require('./treeView.directive');\n\nvar _treeView2 = _interopRequireDefault(_treeView);\n\nvar _TreeView = require('./TreeView.service');\n\nvar _TreeView2 = _interopRequireDefault(_TreeView);\n\nvar _TreeGenerator = require('./TreeGenerator.service');\n\nvar _TreeGenerator2 = _interopRequireDefault(_TreeGenerator);\n\nvar _TreeViewController = require('./TreeViewController');\n\nvar _TreeViewController2 = _interopRequireDefault(_TreeViewController);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _module = _angular2.default.module('ngTreeView', []);\n\n_module.directive('treeView', _treeView2.default).factory('TreeView', _TreeView2.default).factory('TreeGenerator', _TreeGenerator2.default).controller('TreeViewController', _TreeViewController2.default);\n\nexports.default = _module.name;\n\n\n// WEBPACK FOOTER //\n// ./lib/index.js","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = TreeGenerator;\n\nvar _angular = require('angular');\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nTreeGenerator.$inject = ['$compile'];\n\nfunction TreeGenerator($compile) {\n    var service = {};\n\n    service.generate = function (nodes, params) {\n        var html = generateHtml(nodes, params.maxDepth, params);\n\n        return $compile(html)(params.scope);\n    };\n\n    /**\n     * Checks if should render further nodes of a tree depending upon the value of maxDepth.\n     *\n     * If maxDepth is not provided (undefined) then it implies it should render all nodes i.e discard max depth,\n     * if maxDepth is provided and is a number it checks if max depth is greater than zero for rendering child nodes.\n     *\n     * @param maxDepth\n     * @returns {boolean}\n     */\n    function shouldGoDeeper(maxDepth) {\n        return maxDepth === undefined || !isNaN(maxDepth) && maxDepth >= 0;\n    }\n\n    function generateHtml(nodes, maxDepth, params) {\n        if (!_angular2.default.isArray(nodes) || nodes.length === 0 || !shouldGoDeeper(maxDepth)) {\n            return '';\n        }\n\n        // Get the list items html\n        var listItems = nodes.map(function (node, index) {\n            return getListItem(node, index, {\n                maxDepth: maxDepth,\n                isCheckboxEnabled: params.isCheckboxEnabled\n            });\n        });\n\n        return '<ul class=\"tree-view collapsible\">' + listItems.join('') + '</ul>';\n    }\n\n    function getToggleLinkHtml(nodeExpr) {\n        var isCollapsed = nodeExpr + '.collapsed';\n        var isNotCollapsed = '!' + isCollapsed;\n\n        return '<a class=\"toggle\" ng-click=\"vm.toggleNode(' + nodeExpr + ', $event)\" ng-if=\"vm.hasChildren(' + nodeExpr + ')\">' + ('<i class=\"fa fa-w fa-chevron-right\" ng-show=\"' + isCollapsed + '\"></i>') + ('<i class=\"fa fa-w fa-chevron-down\" ng-show=\"' + isNotCollapsed + '\"></i>') + '</a>';\n    }\n\n    function getLabelWithCheckbox(nodeExpr) {\n        var isSelected = nodeExpr + '.selected';\n        var name = '{{' + nodeExpr + '.name}}';\n\n        return '<label>' + ('<input type=\"checkbox\" ng-model=\"' + isSelected + '\" ng-change=\"vm.handleChange(' + nodeExpr + ')\"> ') + ('<span>' + name + '</span>') + '</label>';\n    }\n\n    function getLabel(nodeExpr) {\n        var name = '{{' + nodeExpr + '.name}}';\n\n        return '<span class=\"label\">' + name + '</span>';\n    }\n\n    function getListItem(node, index, params) {\n        var maxDepth = params.maxDepth;\n        var nodeExpr = 'vm.flatNodes[' + node.id + ']';\n        var isCollapsed = nodeExpr + '.collapsed';\n        var isNotCollapsed = '!' + isCollapsed;\n        var label = params.isCheckboxEnabled ? getLabelWithCheckbox(nodeExpr) : getLabel(nodeExpr);\n\n        node.collapsed = maxDepth === 0;\n        // Decrement maxDepth for recursive calls\n        maxDepth = isNaN(maxDepth) ? undefined : maxDepth - 1;\n\n        return '<li class=\"tree-node\" data-index=\"' + index + '\" data-id=\"' + node.id + '\"' + (' ng-class=\"{parent: vm.hasChildren(' + nodeExpr + '), collapsed: ' + isCollapsed + ', expanded: ' + isNotCollapsed + '}\">') + getToggleLinkHtml(nodeExpr) + label + generateHtml(node.children, maxDepth, params) + '</li>';\n    }\n\n    return service;\n}\n\n\n// WEBPACK FOOTER //\n// ./lib/TreeGenerator.service.js","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = TreeView;\n\nvar _angular = require('angular');\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// TODO: Convert this to a simple javascript util module that exports some helper tree view methods\nfunction TreeView() {\n    var service = {};\n\n    service.hasChildren = hasChildren;\n\n    /**\n     * Walks through each node of the tree and applies the callback to each node walked.\n     *\n     * @param tree\n     * @param callback\n     */\n    service.walk = function (tree, callback) {\n        if (!Array.isArray(tree)) {\n            tree = [tree];\n        }\n\n        tree.forEach(function (node, index) {\n            callback(node, index);\n\n            if (hasChildren(node)) {\n                service.walk(node.children, callback);\n            }\n        });\n    };\n\n    /**\n     * Filters the tree recursively depending upon the boolean value returned by the callback\n     * for each node.\n     *\n     * @param tree\n     * @param callback\n     * @param inclusiveChildren\n     */\n    service.filter = function (tree, callback, inclusiveChildren) {\n        // If the tree is not an array make it an array\n        if (!_angular2.default.isArray(tree)) {\n            return service.filter([tree], callback, inclusiveChildren);\n        }\n\n        // Whether or not to include the child nodes even if their parent nodes aren't included.\n        if (inclusiveChildren === true) {\n            return filterTreeInclusive(tree, callback);\n        }\n\n        return filterTree(tree, callback);\n    };\n\n    /**\n     * Flattens the tree into a linear object with node id as it's keys.\n     *\n     * @param tree\n     * @returns {{}}\n     */\n    service.flattenAsObject = function (tree) {\n        var object = {};\n\n        service.walk(tree, function (node) {\n            object[node.id] = node;\n        });\n\n        return object;\n    };\n\n    /**\n     * Results a new array (immutable) obtained by applying the callback function to\n     * each node of the tree recursively.\n     *\n     * @param tree\n     * @param callback\n     */\n    service.map = function (tree, callback) {\n        // If the tree is not an array make it an array\n        if (!_angular2.default.isArray(tree)) {\n            return service.map([tree], callback);\n        }\n\n        return mapTree(tree, callback);\n    };\n\n    /**\n     * Counts the number of nodes a tree has.\n     *\n     * @param tree\n     * @returns {number}\n     */\n    service.count = function count(tree) {\n        tree = _angular2.default.isArray(tree) ? tree : [tree];\n\n        return tree.reduce(function (acc, node) {\n            var childTreeCount = hasChildren(node) ? count(node.children) : 0;\n\n            return acc + childTreeCount;\n        }, tree.length);\n    };\n\n    /**\n     * The actual implementation of the recursive map() function for trees.\n     *\n     * @param tree\n     * @param callback\n     * @returns {Array}\n     */\n    function mapTree(tree, callback) {\n        return tree.map(function (node, index) {\n            var mappedNode = callback(node, index);\n\n            // If the node has children then map them as well.\n            if (_angular2.default.isArray(node.children)) {\n                mappedNode.children = mapTree(node.children, callback);\n            }\n\n            return mappedNode;\n        });\n    }\n\n    /**\n     * Filter and return a new tree such that the nodes for which the callback\n     * returns false would be skipped along with all of their child nodes.\n     *\n     * @param tree\n     * @param callback\n     * @returns {Array}\n     */\n    function filterTree(tree, callback) {\n        var result = [];\n\n        if (!_angular2.default.isArray(tree)) {\n            return [];\n        }\n\n        for (var index = 0; index < tree.length; index++) {\n            var node = tree[index];\n            var shouldIncludeIt = callback(node, index);\n\n            // If the condition holds false for a single node\n            // ignore the whole tree of that node (including all it's children).\n            if (!shouldIncludeIt) {\n                continue;\n            }\n\n            node.children = filterTree(node.children, callback);\n            result.push(node);\n        }\n\n        return result;\n    }\n\n    /**\n     * Filter and return a new tree such that the nodes for which the callback returns false\n     * would be skipped but their children might be added to the new tree if the callback returns true\n     * for those.\n     * Note: The tree structure might change for this, as the children nodes could climb up the hierarchy\n     * in case their parents aren't included.\n     *\n     * @param tree\n     * @param callback\n     */\n    function filterTreeInclusive(tree, callback) {\n        var result = [];\n\n        if (!_angular2.default.isArray(tree)) {\n            return [];\n        }\n\n        for (var index = 0; index < tree.length; index++) {\n            var node = tree[index];\n            var shouldIncludeIt = callback(node, index);\n            var filteredChildren = filterTreeInclusive(node.children, callback);\n\n            if (shouldIncludeIt) {\n                // If the condition holds true then include the node\n                // along with it's filtered children.\n                node.children = filteredChildren;\n                result.push(node);\n            } else {\n                // Otherwise, just add the filtered children to the resulting filtered tree.\n                result = result.concat(filteredChildren);\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * Checks if a node has child nodes.\n     *\n     * @param node\n     * @returns {boolean}\n     */\n    function hasChildren(node) {\n        return _angular2.default.isArray(node.children) && node.children.length > 0;\n    }\n\n    return service;\n}\n\n\n// WEBPACK FOOTER //\n// ./lib/TreeView.service.js","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = TreeViewController;\n\nvar _angular = require('angular');\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nTreeViewController.$inject = ['$scope', '$timeout', '$element', '$compile', 'TreeView', 'TreeGenerator'];\n\nfunction TreeViewController($scope, $timeout, $element, $compile, TreeView, TreeGenerator) {\n    var vm = this;\n\n    vm.maxDepth = Number(vm.maxDepth) || 0;\n    vm.hasChildren = TreeView.hasChildren;\n    vm.flatNodes = {};\n    vm.isCheckboxEnabled = function () {\n        return vm.checkboxes === 'true';\n    };\n\n    vm.toggleNode = function (node, $event) {\n        var clickedElement = $event.currentTarget;\n        var nodeElement = _angular2.default.element(clickedElement).closest('li.tree-node');\n        var containsChildTree = nodeElement.find('ul.tree-view').length > 0;\n\n        // If the node's child tree hasn't been added to the DOM\n        // add it first.\n        if (TreeView.hasChildren(node) && !containsChildTree) {\n            var childTree = generateTree(node.children, 0);\n\n            nodeElement.append(childTree);\n        }\n\n        node.collapsed = !node.collapsed;\n    };\n\n    vm.handleChange = function (node) {\n        if (_angular2.default.isFunction(vm.onSelectionChange)) {\n            vm.onSelectionChange(node);\n        }\n    };\n\n    function init() {\n        $scope.vm = vm;\n        vm.flatNodes = TreeView.flattenAsObject(vm.nodes);\n        $timeout(render);\n    }\n\n    function render() {\n        var tree = generateTree(vm.nodes, vm.maxDepth);\n\n        $element.html(tree);\n    }\n\n    function generateTree(nodes, maxDepth) {\n        return TreeGenerator.generate(nodes, {\n            maxDepth: maxDepth,\n            scope: $scope,\n            isCheckboxEnabled: vm.isCheckboxEnabled()\n        });\n    }\n\n    init();\n}\n\n\n// WEBPACK FOOTER //\n// ./lib/TreeViewController.js","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = treeView;\nfunction treeView() {\n    return {\n        restrict: 'E',\n        scope: {\n            nodes: '=',\n            maxDepth: '@',\n            checkboxes: '@',\n            onSelectionChange: '='\n        },\n        replace: true,\n        template: '',\n        controller: 'TreeViewController',\n        controllerAs: 'vm',\n        bindToController: true\n    };\n}\n\n\n// WEBPACK FOOTER //\n// ./lib/treeView.directive.js","module.exports = require('./lib').default;\n\n\n\n// WEBPACK FOOTER //\n// ./index.js"],"sourceRoot":""}